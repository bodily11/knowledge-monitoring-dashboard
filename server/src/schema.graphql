#import Quiz,Question from "./generated/prisma.graphql"

type Query {
  quizzes: [Quiz!]!
  quiz(id:ID): Quiz!
  users: [User!]!
  user(id:ID): User!
  courses: [Course!]!
  course(id:ID): Course!
  question(id:ID):Question!
  option(id:ID):Option!
}

type Mutation {
  addQuiz(id:ID): Quiz!
  updateQuiz(id:ID,title:String):Quiz!
  addUser(email:String, password:String, role:String): User!
  addCourse(id:ID): Course!
  deleteQuiz(id:ID): Quiz!
  addQuestion(id:ID): Quiz!
  updateQuestion(id:ID, prompt:String):Question
  deleteQuestion(id:ID):Question!
  updateOption(id:ID, text:String!, isCorrect:Boolean):Option!

  instructorSignup(email:String!, password:String!): AuthPayload
  instructorLogin(email:String!, password:String!): AuthPayload
}

# This is being redefined here, rather than imported, so that the password is hidden and can't be queried
type User {
    id: ID!
    email: String!
    role: String!
    createdAt: DateTime!
    courses: [Course!]!
}

type AuthPayload {
  token: String
  user: User
}